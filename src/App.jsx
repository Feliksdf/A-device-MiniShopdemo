import React, { useState, useEffect } from 'react';

const App = () => {
  const [theme, setTheme] = useState('dark');
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');
  const [products, setProducts] = useState([]);
  const [banners, setBanners] = useState([]);
  const [modalImage, setModalImage] = useState(null);
  const [selectedProduct, setSelectedProduct] = useState(null);

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–º—ã Telegram WebApp
  useEffect(() => {
    if (window.Telegram && window.Telegram.WebApp) {
      const tgTheme = window.Telegram.WebApp.themeParams;
      setTheme(tgTheme.bg_color ? 'dark' : 'light');
    }
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ JSON
  useEffect(() => {
    fetch('/products.json')
      .then(res => res.json())
      .then(data => {
        setBanners(data.banners || []);
        setProducts(data.products || []);
      })
      .catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:', err);
        setBanners([]);
        setProducts([]);
      });
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === '–í—Å–µ' || product.category === selectedCategory;
    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
  const openProductDetails = (product) => {
    setSelectedProduct(product);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
  const closeProductDetails = () => {
    setSelectedProduct(null);
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ç–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
  const openFullScreen = (url) => {
    setModalImage(url);
  };

  const closeFullScreen = () => {
    setModalImage(null);
  };

  return (
    <div className="min-h-screen bg-black text-white">
      {/* –®–∞–ø–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞ */}
      <div className="text-center mb-6 pt-6">
        <h1 className="text-3xl font-bold">üì± A-Device</h1>
        <p className="opacity-70 mt-1">–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ Apple –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã</p>
      </div>

      {/* –ü–æ–∏—Å–∫ */}
      <div className="mb-6 px-4 max-w-3xl mx-auto w-full">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-full px-4 py-2 rounded-lg shadow-sm bg-gray-900 border-gray-700 border focus:outline-none focus:ring-2 focus:ring-cyan-500"
        />
      </div>

      {/* –ë–∞–Ω–Ω–µ—Ä—ã —Å–≤–µ—Ä—Ö—É */}
      <div className="mb-8 px-4 max-w-4xl mx-auto space-y-4">
        {banners.map((banner, index) => (
          <div
            key={index}
            onClick={() => openProductDetails(products.find(p => p.id === banner.linkToProduct))}
            className={`cursor-pointer ${banner.bg} rounded-xl shadow-md p-4 text-white`}
          >
            <img src={banner.image} alt={banner.title} className="w-full h-32 object-cover rounded-t-xl" />
            <div className="p-4">
              <h2 className="text-lg font-semibold">{banner.title}</h2>
              <p className="text-sm opacity-90 mt-1">{banner.text}</p>
            </div>
          </div>
        ))}
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <div className="flex overflow-x-auto space-x-2 pb-2 mb-6 no-scrollbar px-4">
        {['–í—Å–µ', '–¢–µ–ª–µ—Ñ–æ–Ω—ã', '–ù–æ—É—Ç–±—É–∫–∏', '–ü–ª–∞–Ω—à–µ—Ç—ã', '–ß–∞—Å—ã', '–ù–∞—É—à–Ω–∏–∫–∏', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã'].map((category, index) => (
          <button
            key={index}
            onClick={() => setSelectedCategory(category)}
            className={`px-4 py-2 rounded-full whitespace-nowrap ${
              selectedCategory === category
                ? 'bg-cyan-500 text-black'
                : 'bg-gray-900 hover:bg-gray-800 text-white'
            } transition`}
          >
            {category}
          </button>
        ))}
      </div>

      {/* –¢–æ–≤–∞—Ä—ã */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 px-4 max-w-6xl mx-auto">
        {filteredProducts.length > 0 ? (
          filteredProducts.map(product => (
            <div
              key={product.id}
              className="bg-gray-900 rounded-xl shadow-md overflow-hidden transform transition-all duration-300 hover:scale-105 hover:shadow-lg cursor-pointer"
              onClick={() => openProductDetails(product)}
            >
              <img
                src={product.image}
                alt={product.name}
                className="w-full h-48 object-cover cursor-zoom-in"
                onClick={(e) => {
                  e.stopPropagation(); // –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ—Ç–æ
                  openFullScreen(product.image);
                }}
              />

              <div className="p-4">
                <h2 className="font-semibold text-lg">{product.name}</h2>
                <p className="text-sm opacity-70 mt-1">–æ—Ç {product.price.toLocaleString()} ‚ÇΩ</p>
              </div>
            </div>
          ))
        ) : (
          <p className="col-span-full text-center py-8 opacity-70">üîç –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–º —Ñ–æ—Ç–æ */}
      {modalImage && (
        <div
          className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90"
          onClick={closeFullScreen}
        >
          <img
            src={modalImage}
            alt="–ü–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ"
            className="max-w-[90vw] max-h-[90vh] object-contain"
            onClick={(e) => e.stopPropagation()}
          />
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
      {selectedProduct && (
        <div className="fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-90">
          <div className="bg-gray-900 rounded-xl shadow-lg p-6 max-w-md w-full relative">
            <button
              onClick={closeProductDetails}
              className="absolute top-2 right-2 text-gray-400 hover:text-white text-xl">√ó</button>

            <img
              src={selectedProduct.image}
              alt={selectedProduct.name}
              className="w-full h-64 object-cover rounded-lg mb-4 cursor-zoom-in"
              onClick={() => openFullScreen(selectedProduct.image)}
            />

            <h2 className="text-2xl font-bold mb-2">{selectedProduct.name}</h2>

            <p className="opacity-90 mb-2">üí∞ –¶–µ–Ω–∞: <strong>{selectedProduct.price.toLocaleString()} ‚ÇΩ</strong></p>

            {selectedProduct.storage && (
              <p className="opacity-90 mb-2">üì¶ –ü–∞–º—è—Ç—å: <strong>{selectedProduct.storage}</strong></p>
            )}

            {selectedProduct.batteryHealth && (
              <p className="opacity-90 mb-2">üîã –ë–∞—Ç–∞—Ä–µ—è: <strong>{selectedProduct.batteryHealth}</strong></p>
            )}

            {selectedProduct.condition && (
              <p className="opacity-90 mb-4">üíé –°–æ—Å—Ç–æ—è–Ω–∏–µ: <strong>{selectedProduct.condition}</strong></p>
            )}

            {selectedProduct.description && (
              <p className="opacity-90 mb-4">{selectedProduct.description}</p>
            )}

            <button
              onClick={() => {
                const message = encodeURIComponent(
                  `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∫—É–ø–∏—Ç—å: ${selectedProduct.name} –∑–∞ ${selectedProduct.price}‚ÇΩ\n\nTelegram: @feliksdf`
                );
                window.open(`https://t.me/feliks_df?text= ${message}`, '_blank');
              }}
              className="mt-3 w-full py-2 bg-cyan-500 hover:bg-cyan-600 text-black font-semibold rounded-md transition"
            >
              –°–≤—è–∑–∞—Ç—å—Å—è —Å @feliksdf
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default App;